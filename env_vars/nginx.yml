---
creds_path: /var/lib/letsencrypt/dns_cloudflare_api_token.ini

certbot_create_if_missing: true
certbot_create_standalone_stop_services: []
certbot_create_command: |-
  certbot certonly --noninteractive
                  --dns-cloudflare
                  --agree-tos
                  --server 'https://acme-v02.api.letsencrypt.org/directory'
                  --dns-cloudflare-credentials '{{ creds_path }}'
                  -d {{ cert_item.domains | join(',') }}
certbot_create_method: standalone
certbot_certs:
  - domains:
    - '*.ayanides.cloud'


nginx_extra_conf_options: |
  include /etc/nginx/modules-enabled/*;
nginx_access_log: /var/log/nginx/access.log main
nginx_log_format: |-
  escape=json '{'
    '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
    '"connection": "$connection", ' # connection serial number
    '"connection_requests": "$connection_requests", ' # number of requests made in connection
    '"pid": "$pid", ' # process pid
    '"request_id": "$request_id", ' # the unique request id
    '"request_length": "$request_length", ' # request length (including headers and body)
    '"remote_addr": "$remote_addr", ' # client IP
    '"remote_user": "$remote_user", ' # client HTTP username
    '"remote_port": "$remote_port", ' # client port
    '"time_local": "$time_local", '
    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
    '"request": "$request", ' # full path no arguments if the request
    '"request_uri": "$request_uri", ' # full path and arguments if the request
    '"args": "$args", ' # args
    '"status": "$status", ' # response status code
    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
    '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
    '"http_referer": "$http_referer", ' # HTTP referer
    '"http_user_agent": "$http_user_agent", ' # user agent
    '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
    '"http_host": "$http_host", ' # the request Host: header
    '"server_name": "$server_name", ' # the name of the vhost serving the request
    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
    '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
    '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
    '"upstream_response_length": "$upstream_response_length", ' # upstream response length
    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
    '"scheme": "$scheme", ' # http or https
    '"request_method": "$request_method", ' # request method
    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
    '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
    '"gzip_ratio": "$gzip_ratio", '
    '"http_cf_ray": "$http_cf_ray",'
    '"geoip_country_code": "$geoip_country_code"'
  '}'

wildcard_domain: ayanides.cloud
nginx_vhost_template: nginx/vhost.j2
nginx_listen_ipv6: false
nginx_vhosts:
# NO HOST
  - server_name: "\"\""
    return: 444
    filename: default.conf
    locations: []

# SEMAPHORE
  - server_name: semaphore.ayanides.cloud
    server_name_redirect: semaphore.ayanides.cloud
    listen: 443 ssl http2
    locations:
      - proxy_pass: http://127.0.0.1:3000
      - proxy_pass: http://127.0.0.1:3000/api/ws
        path: /api/ws
        default: false
        extra_parameters: |
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Origin "";

# PIHOLE
  - server_name: pihole.ayanides.cloud
    server_name_redirect: pihole.ayanides.cloud
    server_name_redirect_exceptions:
      - path: /admin/api.php
        proxy_pass: http://127.0.0.1:8000
    listen: 443 ssl http2
    locations:
      - proxy_pass: http://127.0.0.1:8000
        redirect_path: /admin

# TELEPORT
  - server_name: "teleport.ayanides.cloud"
    server_name_redirect: "teleport.ayanides.cloud"
    listen: 443 ssl http2
    locations:
      - proxy_pass: https://192.168.1.101 # Teleport LB IP
        extra_parameters: |
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";


# TRAEFIK
  - server_name: "*.ayanides.cloud"
    server_name_redirect: "*.ayanides.cloud"
    listen: 443 ssl http2
    locations:
      - proxy_pass: https://192.168.1.100 # Traefik LB IP
        extra_parameters: |
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
