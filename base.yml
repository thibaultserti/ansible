---
- name: Base
  hosts: all
  become: true
  vars_files:
    - "env_vars/base.yml"
  tasks:
    - name: Ensure LC_ALL is set
      ansible.builtin.lineinfile:
        path: /etc/default/locale
        regexp: '^LC_ALL='
        line: LC_ALL=en_US.UTF-8
      when: not is_rpi_nano

    - name: Create the ansible user
      ansible.builtin.user:
        name: "{{ user }}"
        shell: /bin/bash
        home: /opt/ansible

    - name: Make sure we have a 'wheel' group
      ansible.builtin.group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: visudo -cf %s

    - name: Add ansible user to wheel group
      ansible.builtin.user:
        name: "{{ user }}"
        groups: wheel
        append: true

    - name: Add admin user to wheel group
      ansible.builtin.user:
        name: "{{ admin_user }}"
        groups: wheel
        append: true

    - name: Set authorized key taken from file
      ansible.posix.authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ lookup('file', lookup('env', 'PWD') + '/keys/ansible.pub') }}"

    - name: Install base packages
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
      when: not is_rpi_nano

    - name: Configure inotify kernel param
      ansible.posix.sysctl:
        name: fs.inotify.max_user_instances
        value: '256'
        state: present

    - name: Copy webhook script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          HOSTNAME=$(hostname)
          curl -H "Content-Type: application/json" -X POST -d "{\"content\":\"$HOSTNAME has just restarted\"}" {{ webhook_url }}
        dest: /usr/local/bin/discord_message.sh
        mode: '0755'
      failed_when: webhook_url is not defined

    - name: Configure alerting when server reboots
      ansible.builtin.cron:
        name: "alert when reboot"
        special_time: reboot
        job: "/usr/local/bin/discord_message.sh"

  roles:
    - role: geerlingguy.pip
      when: not is_rpi_nano
